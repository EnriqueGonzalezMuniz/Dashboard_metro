---
title: "Afluencia Metro"
format: dashboard
theme: 
- darkly 
- custom.scss
logo: logo-metro.png
server: shiny
---

````{r}

library(shiny)
library(scales)
library(shinydashboard)
library(plotly)


````

```{r}
ordenar_lineas <- function(lineas) {
  
  numeros <- as.numeric(gsub("Linea ", "", lineas[grepl("Linea \\d+", lineas)]))
  letras <- lineas[grepl("Linea [A-Z]", lineas)]
  
  
  lineas_ordenadas <- c(paste("Linea", sort(numeros)), letras)
  return(lineas_ordenadas)
}
```



# {.toolbar}
```{r}
selectInput("linea_metro", "Selecciona una línea", 
                    choices = ordenar_lineas(c(paste("Linea", 1:9), "Linea 12", "Linea A", "Linea B")))
```


# Page 1

## Row 1 {height=18%}

### Col 1 {width=50%}
```{r}
uiOutput("usuarios_totales")
```

### Col 2 {width=50%}
```{r}
uiOutput("ing_tot")
```

## Row 2 {height=18%}

### Col 1 {width=50%}
```{r}
uiOutput("usu_pago")
```
### Col 2 {width=50%}
```{r}
uiOutput("usu_grat")
```


## Row 3 {height=64%}
```{r}
#| title: Afluencia por tipo de pago
plotlyOutput(outputId = "plot")
```


```{r}
#| context: server

df_metro <-  read.csv("C:/Users/a/Documents/datos_metro.csv")

df_agg <- aggregate(afluencia ~ anio + linea + estacion + tipo_pago, df_metro, FUN = sum)

df_agg <-  df_agg[-c(490),]

library(ggplot2)
library(dplyr)
library(shiny)
library(scales)
library(plotly)
library(bslib)
library(bsicons)
library(shinydashboard)


par(mgp =c(3,2,0))
  
df_agg_int <- reactive({
    df_agg %>% filter(linea == input$linea_metro)
  })
 
 
output$plot <- renderPlotly({
  p <-  ggplot(data = df_agg_int(),
               aes(x = estacion,
                  y = afluencia,
                  fill = tipo_pago))+
    geom_col(position = "dodge")+
     labs(
        x = "Estación",
        y = "Afluencia",
        fill = "Tipo de Pago",
        title =  input$linea_metro)+ 
    theme(plot.title = element_text(face = "bold" ,size = 20, color = "white"),
          legend.background = element_rect(fill = "#63605f"),
          legend.text = element_text(size = 13, color = "white"),
          legend.title = element_text(size = 16, colour = "white"),
          legend.box.background = element_rect(fill = "white"), 
          panel.background = element_rect(fill = "transparent"), 
          panel.grid.major = element_blank(), 
          panel.grid.minor = element_blank(), 
          plot.background = element_rect(fill = "transparent", color = NA),
          axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 1, size = 13, color = "white"),
          axis.text.y = element_text(size = 13, color = "white"),
          axis.title = element_text(size = 17, color = "white", face = "bold"))+
    scale_y_continuous(labels =label_number(big.mark = ","))+
    scale_x_discrete(labels = label_wrap(5))+
    scale_fill_manual("Tipo de pago", values = c("Boleto" = "#075213", "Gratuidad" = "#192039", "Prepago" = "#993455"))
    
ggplotly(p)  
    })



#Usuarios totales
output$usuarios_totales <- renderUI({
  value_box(
    title = "Usuarios totales",
    value =  formatC(sum(df_agg_int()$afluencia), digits = 0, big.mark = ",", format = "d"),
    showcase = bsicons::bs_icon("person"),
    theme = if (input$linea_metro == "Linea 1") {
    value_box_theme(bg = "#f04e98", fg = "white")  # Color para Línea 1
  } else if (input$linea_metro == "Linea 2") {
    value_box_theme(bg = "#005e98", fg = "white")  # Color para Línea 2
  } else if (input$linea_metro == "Linea 3") {
    value_box_theme(bg = "#af9800", fg = "white")  # Color para Línea 3
  } else if (input$linea_metro == "Linea 4") {
    value_box_theme(bg = "#6bbbae", fg = "white")  # Color para Línea 4
  } else if (input$linea_metro == "Linea 5") {
    value_box_theme(bg = "#e7d417", fg = "white")  # Color para Línea 5
  } else if (input$linea_metro == "Linea 6") {
    value_box_theme(bg = "#da291c", fg = "white")  # Color para Línea 6
  } else if (input$linea_metro == "Linea 7") {
    value_box_theme(bg = "#e87722", fg = "white")  # Color para Línea 7
  } else if (input$linea_metro == "Linea 8") {
    value_box_theme(bg = "#009a44", fg = "white")  # Color para Línea 8
  } else if (input$linea_metro == "Linea 9") {
    value_box_theme(bg = "#512f2e", fg = "white")  # Color para Línea 9
  } else if (input$linea_metro == "Linea 12") {
    value_box_theme(bg = "#b9975b", fg = "white")  # Color para Línea 12
  } else if (input$linea_metro == "Linea A") {
    value_box_theme(bg = "#981e97", fg = "white")  # Color para Línea A
  } else {value_box_theme(bg = "#b1b3b3", fg = "white")  # Color para Línea B
  } 
  )
})

#Usuarios pago
output$usu_pago <- renderUI({
  value_box(
    title = "Usuarios de Pago",
    value =  formatC(sum(df_agg_int()$afluencia[df_agg_int()$tipo_pago!="Gratuidad"]),big.mark = ",",digits = 0,format = "d"),
    showcase = bsicons::bs_icon("person-check"),
    theme = if (input$linea_metro == "Linea 1") {
    value_box_theme(fg = "#f04e98", bg = "white")  # Color para Línea 1
  } else if (input$linea_metro == "Linea 2") {
    value_box_theme(fg = "#005e98", bg = "white")  # Color para Línea 2
  } else if (input$linea_metro == "Linea 3") {
    value_box_theme(fg = "#af9800", bg = "white")  # Color para Línea 3
  } else if (input$linea_metro == "Linea 4") {
    value_box_theme(fg = "#6bbbae", bg = "white")  # Color para Línea 4
  } else if (input$linea_metro == "Linea 5") {
    value_box_theme(fg = "#e7d417", bg = "white")  # Color para Línea 5
  } else if (input$linea_metro == "Linea 6") {
    value_box_theme(fg = "#da291c", bg = "white")  # Color para Línea 6
  } else if (input$linea_metro == "Linea 7") {
    value_box_theme(fg = "#e87722", bg = "white")  # Color para Línea 7
  } else if (input$linea_metro == "Linea 8") {
    value_box_theme(fg = "#009a44", bg = "white")  # Color para Línea 8
  } else if (input$linea_metro == "Linea 9") {
    value_box_theme(fg = "#512f2e", bg = "white")  # Color para Línea 9
  } else if (input$linea_metro == "Linea 12") {
    value_box_theme(fg = "#b9975b", bg = "white")  # Color para Línea 12
  } else if (input$linea_metro == "Linea A") {
    value_box_theme(fg = "#981e97", bg = "white")  # Color para Línea A
  } else {value_box_theme(fg = "#b1b3b3", bg = "white")  # Color para Línea B
  } 
  )
})

#Ingresos totales 
output$ing_tot <- renderUI({
  value_box(
    title = "Ingresos totales",
    value =  formatC(sum(df_agg_int()$afluencia[df_agg_int()$tipo_pago!="Gratuidad"])*5,big.mark = ",",digits = 0,format = "d"),
    showcase = bsicons::bs_icon("currency-dollar"),
    theme = if (input$linea_metro == "Linea 1") {
    value_box_theme(bg = "#f04e98", fg = "white")  # Color para Línea 1
  } else if (input$linea_metro == "Linea 2") {
    value_box_theme(bg = "#005e98", fg = "white")  # Color para Línea 2
  } else if (input$linea_metro == "Linea 3") {
    value_box_theme(bg = "#af9800", fg = "white")  # Color para Línea 3
  } else if (input$linea_metro == "Linea 4") {
    value_box_theme(bg = "#6bbbae", fg = "white")  # Color para Línea 4
  } else if (input$linea_metro == "Linea 5") {
    value_box_theme(bg = "#e7d417", fg = "white")  # Color para Línea 5
  } else if (input$linea_metro == "Linea 6") {
    value_box_theme(bg = "#da291c", fg = "white")  # Color para Línea 6
  } else if (input$linea_metro == "Linea 7") {
    value_box_theme(bg = "#e87722", fg = "white")  # Color para Línea 7
  } else if (input$linea_metro == "Linea 8") {
    value_box_theme(bg = "#009a44", fg = "white")  # Color para Línea 8
  } else if (input$linea_metro == "Linea 9") {
    value_box_theme(bg = "#512f2e", fg = "white")  # Color para Línea 9
  } else if (input$linea_metro == "Linea 12") {
    value_box_theme(bg = "#b9975b", fg = "white")  # Color para Línea 12
  } else if (input$linea_metro == "Linea A") {
    value_box_theme(bg = "#981e97", fg = "white")  # Color para Línea A
  } else {value_box_theme(bg = "#b1b3b3", fg = "white")  # Color para Línea B
  } 
  )
})


#Usuarios gratuidad
output$usu_grat <- renderUI({
  value_box(
    title = "Usuarios Gratuidad",
    value =  formatC(sum(df_agg_int()$afluencia[df_agg_int()$tipo_pago=="Gratuidad"]),big.mark = ",",digits = 0,format = "d"),
    showcase = bsicons::bs_icon("person-exclamation"),
    theme = if (input$linea_metro == "Linea 1") {
    value_box_theme(fg = "#f04e98", bg = "white")  # Color para Línea 1
  } else if (input$linea_metro == "Linea 2") {
    value_box_theme(fg = "#005e98", bg = "white")  # Color para Línea 2
  } else if (input$linea_metro == "Linea 3") {
    value_box_theme(fg = "#af9800", bg = "white")  # Color para Línea 3
  } else if (input$linea_metro == "Linea 4") {
    value_box_theme(fg = "#6bbbae", bg = "white")  # Color para Línea 4
  } else if (input$linea_metro == "Linea 5") {
    value_box_theme(fg = "#e7d417", bg = "white")  # Color para Línea 5
  } else if (input$linea_metro == "Linea 6") {
    value_box_theme(fg = "#da291c", bg = "white")  # Color para Línea 6
  } else if (input$linea_metro == "Linea 7") {
    value_box_theme(fg = "#e87722", bg = "white")  # Color para Línea 7
  } else if (input$linea_metro == "Linea 8") {
    value_box_theme(fg = "#009a44", bg = "white")  # Color para Línea 8
  } else if (input$linea_metro == "Linea 9") {
    value_box_theme(fg = "#512f2e", bg = "white")  # Color para Línea 9
  } else if (input$linea_metro == "Linea 12") {
    value_box_theme(fg = "#b9975b", bg = "white")  # Color para Línea 12
  } else if (input$linea_metro == "Linea A") {
    value_box_theme(fg = "#981e97", bg = "white")  # Color para Línea A
  } else {value_box_theme(fg = "#b1b3b3", bg = "white")  # Color para Línea B
  } 
  )
})

```








